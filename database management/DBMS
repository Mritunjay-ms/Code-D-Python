-- Alumni Table for Registration & Profile
CREATE TABLE Alumni (
    AlumniID INT AUTO_INCREMENT PRIMARY KEY,
    Email VARCHAR(100) UNIQUE NOT NULL,
    Phone VARCHAR(15) UNIQUE,
    PasswordHash VARCHAR(255) NOT NULL,
    Name VARCHAR(100) NOT NULL,
    BatchYear YEAR NOT NULL,
    Course VARCHAR(100) NOT NULL,
    CurrentJob VARCHAR(150),
    Location VARCHAR(100),
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Admin Table (for receiving messages)
CREATE TABLE Admin (
    AdminID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100),
    Email VARCHAR(100)
);

-- News & Announcements Table
CREATE TABLE Announcements (
    AnnouncementID INT AUTO_INCREMENT PRIMARY KEY,
    Title VARCHAR(255) NOT NULL,
    Content TEXT NOT NULL,
    PostedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Events Management Table
CREATE TABLE Events (
    EventID INT AUTO_INCREMENT PRIMARY KEY,
    EventName VARCHAR(255) NOT NULL,
    Description TEXT,
    EventDate DATE NOT NULL,
    Location VARCHAR(150)
);

-- Event Registration linking Alumni and Events
CREATE TABLE EventRegistrations (
    RegistrationID INT AUTO_INCREMENT PRIMARY KEY,
    AlumniID INT,
    EventID INT,
    RegisteredAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (AlumniID) REFERENCES Alumni(AlumniID),
    FOREIGN KEY (EventID) REFERENCES Events(EventID)
);

-- Job/Internship Posting Table
CREATE TABLE JobPostings (
    JobID INT AUTO_INCREMENT PRIMARY KEY,
    PostedByAlumniID INT,
    JobTitle VARCHAR(255) NOT NULL,
    Description TEXT,
    Company VARCHAR(150),
    Location VARCHAR(100),
    PostedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PostedByAlumniID) REFERENCES Alumni(AlumniID)
);

-- Feedback & Suggestions Table
CREATE TABLE Feedback (
    FeedbackID INT AUTO_INCREMENT PRIMARY KEY,
    AlumniID INT,
    Message TEXT NOT NULL,
    SentAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (AlumniID) REFERENCES Alumni(AlumniID)
);

-- Contact/Admin Message Table
CREATE TABLE ContactAdmin (
    ContactID INT AUTO_INCREMENT PRIMARY KEY,
    AlumniID INT,
    Message TEXT NOT NULL,
    SentAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (AlumniID) REFERENCES Alumni(AlumniID)
);

